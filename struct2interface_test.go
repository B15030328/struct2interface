package struct2interface

import (
	"io/ioutil"
	"testing"
)

var (
	method = []byte(`// Code generated by struct2interface; DO NOT EDIT.

package testdata

// MethodInterface ...
// Method describes the code and documentation
// tied into a method
type MethodInterface interface {
	// Lines return a []string consisting of
	// the documentation and code appended
	// in chronological order
	Lines() []string
}	
`)
)

var (
	method1 = []byte(`// Code generated by struct2interface; DO NOT EDIT.

package testdata

// Method1Interface ...
// Method1 describes the code and documentation
// tied into a method
type Method1Interface interface {
	// Lines return a []string consisting of
	// the documentation and code appended
	// in chronological order
	Lines() []string
}
`)
)

func TestDir(t *testing.T) {
	err := MakeDir("./testdata")
	if err != nil {
		t.Fatal(err)
	}

	output, err := ioutil.ReadFile("./testdata/interface_Method.go")
	if err != nil {
		t.Fatal(err)
	}
	test, err := ioutil.ReadFile("./testdata/test_interface_Method.go")
	if err != nil {
		t.Fatal(err)
	}

	if string(output) != string(test) {
		t.Fail()
	}

	output, err = ioutil.ReadFile("./testdata/interface_Method1.go")
	if err != nil {
		t.Fatal(err)
	}
	test, err = ioutil.ReadFile("./testdata/test_interface_Method1.go")
	if err != nil {
		t.Fatal(err)
	}

	if string(output) != string(test) {
		t.Fail()
	}
}
